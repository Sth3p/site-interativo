let vidas = 3;
let pontos = 0;
let evidencias = 0;
let inventario = [];

let cenaAtual = "inicio";

const cenas = {
  inicio: {
    texto: "Voc√™ chegou √† cena do crime. O corpo est√° no ch√£o da sala. O que voc√™ faz?",
    opcoes: [
      { texto: "üïµÔ∏è‚Äç‚ôÇÔ∏è Examinar o corpo", proxCena: "corpo", item: "Ferida no pesco√ßo", pontos: 2 },
      { texto: "üë£ Procurar pegadas", proxCena: "pegadas", item: "Pegadas com lama", pontos: 1 },
      { texto: "üìû Chamar refor√ßos", proxCena: "reforcos", penaliza: true }
    ]
  },

  corpo: {
    texto: "Voc√™ examina o corpo e nota uma ferida precisa no pesco√ßo. O que deseja fazer em seguida?",
    opcoes: [
      { texto: "üîç Investigar a √°rea ao redor", proxCena: "area_perto_corpo", item: "Fios de cabelo estranho", pontos: 1 },
      { texto: "üìã Fazer relat√≥rio preliminar", proxCena: "relatorio", pontos: 1 }
    ]
  },

  pegadas: {
    texto: "As pegadas parecem recentes e levam para a cozinha. Pr√≥ximo passo?",
    opcoes: [
      { texto: "Seguir pegadas at√© a cozinha", proxCena: "cozinha", pontos: 1 },
      { texto: "Coletar amostra da lama", proxCena: "amostra_lama", item: "Amostra de lama", pontos: 2 }
    ]
  },

  reforcos: {
    texto: "Voc√™ chama refor√ßos, mas perde tempo e deixa pistas esfriar.",
    opcoes: [
      { texto: "Voltar √† investiga√ß√£o", proxCena: "inicio" }
    ],
    penaliza: true
  },

  area_perto_corpo: {
    texto: "Voc√™ encontra fios de cabelo estranho perto do corpo.",
    opcoes: [
      { texto: "Enviar para an√°lise", proxCena: "esperar_analise", item: "Fios de cabelo estranho", pontos: 2 },
      { texto: "Ignorar e continuar procurando", proxCena: "cozinha" }
    ]
  },

  relatorio: {
    texto: "Voc√™ escreve um relat√≥rio preliminar e prepara-se para a pr√≥xima etapa.",
    opcoes: [
      { texto: "Ir para a cozinha", proxCena: "cozinha" }
    ]
  },

  amostra_lama: {
    texto: "A amostra de lama pode ser importante para rastrear suspeitos.",
    opcoes: [
      { texto: "Seguir pegadas at√© a cozinha", proxCena: "cozinha" }
    ]
  },

  cozinha: {
    texto: "Na cozinha, h√° uma faca com digitais e um bilhete rasgado. O que fazer?",
    opcoes: [
      { texto: "Analisar a faca", proxCena: "faca", item: "Faca com digitais", pontos: 2 },
      { texto: "Ler o bilhete", proxCena: "bilhete", item: "Bilhete amea√ßador", pontos: 2 },
      { texto: "Inspecionar a lixeira", proxCena: "lixeira" }
    ]
  },

  faca: {
    texto: "A faca tem digitais parciais. Pr√≥ximo passo?",
    opcoes: [
      { texto: "Coletar digitais", proxCena: "esperar_analise_faca", pontos: 1 },
      { texto: "Ignorar e ir ao quarto", proxCena: "quarto" }
    ]
  },

  bilhete: {
    texto: "O bilhete menciona vingan√ßa. Pr√≥ximo passo?",
    opcoes: [
      { texto: "Ir ao quarto", proxCena: "quarto" },
      { texto: "Procurar mais pistas na cozinha", proxCena: "cozinha_pistas" }
    ]
  },

  lixeira: {
    texto: "Na lixeira h√° restos suspeitos. O que fazer?",
    opcoes: [
      { texto: "Coletar restos para an√°lise", proxCena: "esperar_analise_lixeira", pontos: 2 },
      { texto: "Ignorar e ir ao quarto", proxCena: "quarto" }
    ]
  },

  cozinha_pistas: {
    texto: "Voc√™ acha um peda√ßo de roupa rasgado perto da cozinha.",
    opcoes: [
      { texto: "Guardar como evid√™ncia", proxCena: "quarto", item: "Roupa rasgada", pontos: 1 }
    ]
  },

  esperar_analise: {
    texto: "Esperando an√°lise dos fios de cabelo...",
    opcoes: [
      { texto: "Continuar investiga√ß√£o no quarto", proxCena: "quarto" }
    ]
  },

  esperar_analise_faca: {
    texto: "Esperando resultados das digitais da faca...",
    opcoes: [
      { texto: "Investigar quarto", proxCena: "quarto" }
    ]
  },

  esperar_analise_lixeira: {
    texto: "Esperando resultados da an√°lise dos restos da lixeira...",
    opcoes: [
      { texto: "Investigar quarto", proxCena: "quarto" }
    ]
  },

  quarto: {
    texto: "No quarto h√° marcas de unha na parede e fotos espalhadas.",
    opcoes: [
      { texto: "Coletar lasca de unha", proxCena: "lasca_unha", item: "Lasca de unha", pontos: 1 },
      { texto: "Analisar fotos", proxCena: "fotos", item: "Fotos do irm√£o", pontos: 1 },
      { texto: "Vasculhar gavetas", proxCena: "gavetas", item: "Carta de amea√ßa antiga", pontos: 2 }
    ]
  },

  lasca_unha: {
    texto: "Lasca coletada. Pr√≥ximo passo?",
    opcoes: [
      { texto: "Voltar para sala principal", proxCena: "sala_principal" }
    ]
  },

  fotos: {
    texto: "As fotos mostram um desentendimento com o irm√£o da v√≠tima.",
    opcoes: [
      { texto: "Guardar fotos como evid√™ncia", proxCena: "sala_principal" }
    ]
  },

  gavetas: {
    texto: "Carta antiga mostra uma amea√ßa clara ao falecido.",
    opcoes: [
      { texto: "Guardar carta como evid√™ncia", proxCena: "sala_principal" }
    ]
  },

  sala_principal: {
    texto: "Voc√™ revisa todas as evid√™ncias coletadas e precisa escolher o suspeito.",
    opcoes: [
      { texto: "Acusar o irm√£o", proxCena: "final_irmao" },
      { texto: "Acusar o vizinho", proxCena: "final_vizinho" },
      { texto: "Acusar o caseiro", proxCena: "final_caseiro" }
    ]
  },

  final_irmao: {
    texto: "Voc√™ acusa o irm√£o da v√≠tima.",
    verificar: () => inventario.includes("Bilhete amea√ßador") && inventario.includes("Fotos do irm√£o"),
    sucessoTexto: "Voc√™ acertou! As evid√™ncias apontam para vingan√ßa familiar. Caso encerrado!",
    fracassoTexto: "As evid√™ncias n√£o s√£o suficientes para condenar o irm√£o. O caso continua.",
  },

  final_vizinho: {
    texto: "Voc√™ acusa o vizinho.",
    verificar: () => inventario.includes("Amostra de lama") && inventario.includes("Roupa rasgada"),
    sucessoTexto: "Voc√™ acertou! O vizinho estava envolvido, pistas de lama e roupa confirmam isso.",
    fracassoTexto: "Faltam evid√™ncias s√≥lidas contra o vizinho. O caso n√£o foi resolvido.",
  },

  final_caseiro: {
    texto: "Voc√™ acusa o caseiro.",
    verificar: () => inventario.includes("Lasca de unha") && inventario.includes("Faca com digitais"),
    sucessoTexto: "Voc√™ acertou! O caseiro deixou digitais na faca e uma lasca de unha. Caso fechado.",
    fracassoTexto: "N√£o h√° provas suficientes para acusar o caseiro. Continue investigando.",
  }
};

function atualizarHUD() {
  document.getElementById("vidas").innerText = vidas;
  document.getElementById("pontos").innerText = pontos;
  document.getElementById("evidencias").innerText = evidencias;
}

function atualizarInventario() {
  const container = document.getElementById("inventario");
  container.innerHTML = "";
  inventario.forEach(item => {
    const div = document.createElement("div");
    div.className = "item";
    div.innerText = item;
    container.appendChild(div);
  });
}

function mostrarCena() {
  const cena = cenas[cenaAtual];
  const texto = document.getElementById("texto");
  const opcoes = document.getElementById("opcoes");
  const botaoAvancar = document.getElementById("botaoAvancar");

  texto.innerText = cena.texto;
  opcoes.innerHTML = "";
  botaoAvancar.disabled = true;

  if (cena.verificar) {
    // Final de acusa√ß√£o
    botaoAvancar.style.display = "none";
    let sucesso = cena.verificar();
    texto.innerText = sucesso ? cena.sucessoTexto : cena.fracassoTexto;
    opcoes.innerHTML = `<button onclick="location.reload()">üîÅ Recome√ßar</button>`;
    return;
  } else {
    botaoAvancar.style.display = "inline-block";
  }

  cena.opcoes.forEach((opcao, i) => {
    const btn = document.createElement("button");
    btn.innerText = opcao.texto;
    btn.onclick = () => selecionarOpcao(i, btn);
    opcoes.appendChild(btn);
  });
}

function selecionarOpcao(indice, botao) {
  const cena = cenas[cenaAtual];
  const opcao = cena.opcoes[indice];

  // marca bot√£o selecionado
  document.querySelectorAll("#opcoes button").forEach(b => b.classList.remove("selecionada"));
  botao.classList.add("selecionada");

  // ativa bot√£o avan√ßar e define pr√≥xima cena
  proximaEtapa = () => {
    if (opcao.penaliza) {
      vidas--;
      if (vidas <= 0) return fimDeJogo(false);
    } else if (opcao.item) {
      if (!inventario.includes(opcao.item)) {
        inventario.push(opcao.item);
        evidencias++;
        pontos += opcao.pontos || 1;
      }
      atualizarInventario();
    }

    cenaAtual = opcao.proxCena;
    mostrarCena();
    atualizarHUD();
  };

  document.getElementById("botaoAvancar").disabled = false;
}

function fimDeJogo(sucesso) {
  const texto = document.getElementById("texto");
  const opcoes = document.getElementById("opcoes");
  const botaoAvancar = document.getElementById("botaoAvancar");

  texto.innerText = sucesso ? "Voc√™ completou a investiga√ß√£o!" : "Voc√™ perdeu todas as vidas. O caso esfriou...";
  opcoes.innerHTML = '<button onclick="location.reload()">üîÅ Recome√ßar</button>';
  botaoAvancar.disabled = true;
}

let proximaEtapa = null;

document.getElementById("botaoAvancar").addEventListener("click", () => {
  if (typeof proximaEtapa === "function") {
    proximaEtapa();
    proximaEtapa = null;
  }
});

window.onload = () => {
  atualizarHUD();
  atualizarInventario();
  mostrarCena();
};
